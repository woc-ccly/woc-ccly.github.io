@prefix : <http://www.w3.org/ns/td-validation#> .
@prefix td: <https://www.w3.org/2019/wot/td#> .
@prefix jsonschema: <https://www.w3.org/2019/wot/json-schema#> .
@prefix wotsec: <https://www.w3.org/2019/wot/security#> .
@prefix hctl: <https://www.w3.org/2019/wot/hypermedia#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix vs: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix vann: <http://purl.org/vocab/vann/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix schema: <http://schema.org> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

:ThingShape a sh:NodeShape ;
    sh:targetClass td:Thing ;
    sh:closed false ;
    sh:order 1 ;
    sh:property [
        sh:path dcterms:title ;
        sh:minCount 1 ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path dcterms:description ;
        sh:order 3 ;
    ] ;
    sh:property [
        sh:path td:versionInfo ;
        sh:node :VersionInfoShape ;
        sh:order 5 ;
    ] ;
    sh:property [
        sh:path dcterms:created ;
        sh:datatype xsd:dateTime ;
        sh:maxCount 1 ;
        sh:order 6 ;
    ] ;
    sh:property [
        sh:path dcterms:modified ;
        sh:datatype xsd:dateTime ;
        sh:maxCount 1 ;
        sh:order 7 ;
    ] ;
    sh:property [
        sh:path td:supportContact ;
        sh:maxCount 1 ;
        sh:order 8 ;
    ] ;
    sh:property [
        sh:path [
            sh:alternativePath (
                td:hasPropertyAffordance
                td:hasActionAffordance
                td:hasEventAffordance
            )
        ] ;
        sh:node :InteractionAffordanceShape ;
        sh:minCount 1
    ] ;
    sh:property [
        sh:path td:hasPropertyAffordance ;
        sh:node :PropertyAffordanceShape ;
        sh:order 10 ;
    ] ;
    sh:property [
        sh:path td:hasActionAffordance ;
        sh:node :ActionAffordanceShape ;
        sh:order 11 ;
    ] ;
    sh:property [
        sh:path td:hasEventAffordance ;
        sh:node :EventAffordanceShape ;
        sh:order 12 ;
    ] ;
    sh:property [
        sh:path td:hasLink ;
        sh:node :LinkShape ;
        sh:order 13 ;
    ] ;
    sh:property [
        sh:path td:hasForm ;
        sh:node :FormShape ;
        sh:order 14 ;
    ] ;
    sh:property [
        sh:path td:hasSecurityConfiguration ;
        sh:minCount 1 ;
        sh:node :SecuritySchemeShape ;
        sh:order 15 ;
    ] .
    
:InteractionAffordanceShape a sh:NodeShape ;
    sh:targetClass td:InteractionAffordance ;
    sh:closed false ;
    sh:order 2 ;
    sh:property [
        sh:path dcterms:title ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path dcterms:description ;
        sh:order 3 ;
    ] ;
    sh:property [
        sh:path td:hasForm ;
        sh:minCount 1 ;
        sh:node :FormShape ;
        sh:order 5 ;
    ] ;
    sh:property [
        sh:path td:hasUriTemplateSchema ;
        sh:node :DataSchemaShape ;
        sh:order 6 ;
    ] .

:PropertyAffordanceShape a sh:NodeShape ;
    sh:targetClass td:PropertyAffordance ;
    sh:closed false ;
    sh:order 3 ;
    sh:property [
        sh:path td:isObservable ;
        sh:datatype xsd:boolean ;
        sh:maxCount 1 ;
    ] .
    
:ActionAffordanceShape a sh:NodeShape ;
    sh:targetClass td:ActionAffordance ;
    sh:closed false ;
    sh:order 4 ;
    sh:property [
        sh:path td:hasInputSchema ;
        sh:node :DataSchemaShape ;
        sh:maxCount 1 ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path td:hasOutputSchema ;
        sh:node :DataSchemaShape ;
        sh:maxCount 1 ;
        sh:order 2 ;
    ] ;
    sh:property [
        sh:path td:isSafe ;
        sh:datatype xsd:boolean ;
        sh:defaultValue false ;
        sh:maxCount 1 ;
        sh:order 3 ;
    ] ;
    sh:property [
        sh:path td:isIdempotent ;
        sh:datatype xsd:boolean ;
        sh:defaultValue false ;
        sh:maxCount 1 ;
        sh:order 4 ;
    ] .
    
:EventAffordanceShape a sh:NodeShape ;
    sh:targetClass td:EventAffordance ;
    sh:closed false ;
    sh:order 5 ;
    sh:property [
        sh:path td:hasSubscriptionSchema ;
        sh:node :DataSchemaShape ;
        sh:maxCount 1 ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path td:hasNotificationSchema ;
        sh:node :DataSchemaShape ;
        sh:maxCount 1 ;
        sh:order 2 ;
    ] ;
    sh:property [
        sh:path td:hasCancellationSchema ;
        sh:node :DataSchemaShape ;
        sh:maxCount 1 ;
        sh:order 3 ;
    ] .

:VersionInfoShape a sh:NodeShape ;
    sh:targetClass td:VersionInfo ;
    sh:closed false ;
    sh:order 8 ;
    sh:property [
        sh:path td:instance ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] .

:FormShape a sh:NodeShape ;
    sh:targetClass hctl:Form ;
    sh:closed false ;
    sh:order 7 ;
    sh:property [
        sh:path hctl:hasTarget ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:nodeKind sh:IRI ;
        sh:order 2 ;
    ] ;
    sh:property [
        sh:path hctl:forContentType ;
        sh:datatype xsd:string ;
        sh:defaultValue "application/json"^^xsd:string ;
        sh:order 3 ;
    ] ;
    sh:property [
        sh:path hctl:forContentCoding ;
        sh:datatype xsd:string ;
        sh:order 4 ;
    ] ;
    sh:property [
        sh:path hctl:returns ;
        sh:node :ExpectedResponseShape ;
        sh:order 8 ;
    ] ;
    sh:property [
        sh:path hctl:hasOperationType ;
        sh:in (
            td:readProperty
            td:writeProperty
            td:observeProperty
            td:unobserveProperty
            td:invokeAction
            td:subscribeEvent
            td:unsubscribeEvent
            td:readAllProperties
            td:writeAllProperties
            td:readMultipleProperties
            td:writeMultipleProperties
        );
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path hctl:forSubProtocol ;
        sh:maxCount 1 ;
        sh:order 5 ;
    ] ;
    sh:property [
        sh:path td:hasSecurityConfiguration ;
        sh:node :SecuritySchemeShape ;
        sh:order 6 ;
    ] ;
    sh:property [
        sh:path wotsec:scopes ;
        sh:order 7 ;
    ] .
    
:LinkShape a sh:NodeShape ;
    sh:targetClass hctl:Link ;
    sh:closed false ;
    sh:order 6 ;
    sh:property [
        sh:path hctl:hasTarget ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:nodeKind sh:IRI ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path hctl:hintsAtMediaType ;
        sh:datatype xsd:string ;
        sh:order 2 ;
    ] ;
    sh:property [
        sh:path hctl:hasRelationType ;
        sh:nodeKind sh:IRI ; # TODOÂ could be relaxed
        sh:order 3 ;
    ] ;
    sh:property [
        sh:path hctl:hasAnchor ;
        sh:node sh:IRI ;
        sh:maxCount 1 ;
        sh:order 4 ;
    ] .

:ExpectedResponseShape a sh:NodeShape ;
    sh:targetClass hctl:ExpectedResponse ;
    sh:closed false ;
    sh:order 9 ;
     sh:property [
        sh:path hctl:forContentType ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
    ] .

:SecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:SecurityScheme ;
    sh:closed false ;
    sh:order 1 ;
    sh:property [
        sh:path rdf:type ;
        # FIXME declare securityDefinitions as @included
        # sh:minCount 1 ;
        sh:in (
            wotsec:NoSecurityScheme
            wotsec:BasicSecurityScheme
            wotsec:CertSecurityScheme
            wotsec:DigestSecurityScheme
            wotsec:BearerSecurityScheme
            wotsec:PoPSecurityScheme
            wotsec:PSKSecurityScheme
            wotsec:PublicSecurityScheme
            wotsec:OAuth2SecurityScheme
            wotsec:APIKeySecurityScheme
        );
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path dcterms:description ;
        sh:order 2 ;
    ] ;
    sh:property [
        sh:path wotsec:proxy ;
        sh:nodeKind sh:IRI ;
        sh:maxCount 1 ;
        sh:order 4 ;
    ] .

:NoSecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:NoSecurityScheme ;
    sh:closed false ;
    sh:order 2 .

:BasicSecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:BasicSecurityScheme ;
    sh:closed false ;
    sh:order 3 ;
    sh:property [
        sh:path wotsec:in ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:in (
          "header"
          "query"
          "body"
          "cookie"
        );
        sh:defaultValue "header"^^xsd:string ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path wotsec:name ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:order 2 ;
    ] .

:DigestSecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:DigestSecurityScheme ;
    sh:closed false ;
    sh:order 4 ;
    sh:property [
        sh:path wotsec:qop ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:in (
          "auth"
          "auth-int"
        );
        sh:defaultValue "auth"^^xsd:string ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path wotsec:in ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:in (
          "header"
          "query"
          "body"
          "cookie"
        );
        sh:defaultValue "header"^^xsd:string ;
        sh:order 2 ;
    ] ;
    sh:property [
        sh:path wotsec:name ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:order 3 ;
    ] .

:APIKeySecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:APIKeySecurityScheme ;
    sh:closed false ;
    sh:order 5 ;
    sh:property [
        sh:path wotsec:in ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:in (
          "header"
          "query"
          "body"
          "cookie"
        );
        sh:defaultValue "query"^^xsd:string ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path wotsec:name ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:order 2 ;
    ] .

:BearerSecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:BearerSecurityScheme ;
    sh:closed false ;
    sh:order 6 ;
    sh:property [
        sh:path wotsec:authorization ;
        sh:datatype xsd:anyURI ;
        sh:maxCount 1 ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path wotsec:alg ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:in (
          "MD5" 
          "ES256"
          "ES512-256"
        );
        sh:defaultValue "ES256"^^xsd:string ;
        sh:order 2 ;
    ] ;
    sh:property [
        sh:path wotsec:format ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:in (
          "jwt" 
          "cwt" 
          "jwe"
          "jws"
        );
        sh:defaultValue "jwt"^^xsd:string ;
        sh:order 3 ;
    ] ;
    sh:property [
        sh:path wotsec:in ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:in (
          "header"
          "query"
          "body"
          "cookie"
        );
        sh:defaultValue "header"^^xsd:string ;
        sh:order 4 ;
    ] ;
    sh:property [
        sh:path wotsec:name ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:order 5 ;
    ] .

:CertSecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:CertSecurityScheme ;
    sh:closed false ;
    sh:order 7 ;
    sh:property [
        sh:path wotsec:identity ;
        sh:maxCount 1 ;
        sh:datatype xsd:string ;
    ] .

:PSKSecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:PSKSecurityScheme ;
    sh:closed false ;
    sh:order 8 ;
    sh:property [
        sh:path wotsec:identity ;
        sh:maxCount 1 ;
        sh:datatype xsd:string ;
    ] .

:PublicSecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:PublicSecurityScheme ;
    sh:closed false ;
    sh:order 9 ;
    sh:property [
        sh:path wotsec:identity ;
        sh:maxCount 1 ;
        sh:datatype xsd:string ;
    ] .

:PoPSecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:PoPSecurityScheme ;
    sh:closed false ;
    sh:order 10 ;
    sh:property [
        sh:path wotsec:authorization ;
        sh:maxCount 1 ;
        sh:nodeKind sh:IRI ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path wotsec:alg ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:in (
          "MD5" 
          "ES256"
          "ES512-256"
        );
        sh:defaultValue "ES256"^^xsd:string ;
        sh:order 2 ;
    ] ;
    sh:property [
        sh:path wotsec:format ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:in (
          "jwt" 
          "cwt" 
          "jwe"
          "jws"
        );
        sh:defaultValue "jwt"^^xsd:string ;
        sh:order 3 ;
    ] ;
    sh:property [
        sh:path wotsec:in ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:in (
          "header"
          "query"
          "body"
          "cookie"
        );
        sh:defaultValue "header"^^xsd:string ;
        sh:order 4 ;
    ] ;
    sh:property [
        sh:path wotsec:name ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:order 5 ;
    ] .

:OAuth2SecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:OAuth2SecurityScheme ;
    sh:closed false ;
    sh:order 11 ;
    sh:property [
        sh:path wotsec:authorization ;
        sh:nodeKind sh:IRI ;
        sh:maxCount 1 ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path wotsec:token ;
        sh:nodeKind sh:IRI ;
        sh:maxCount 1 ;
        sh:order 2 ;
    ] ;
    sh:property [
        sh:path wotsec:refresh ;
        sh:nodeKind sh:IRI ;
        sh:maxCount 1 ;
        sh:order 3 ;
    ] ;
    sh:property [
        sh:path wotsec:scopes ;
        sh:datatype xsd:string ;
        sh:order 4 ;
    ] ;
    sh:property [
        sh:path wotsec:flow ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:in (
#            "implicit" 
#            "password" 
#            "client" 
            "code"
        );
        sh:minCount 1 ;
        sh:order 5 ;
    ] .
    
:DataSchemaShape a sh:NodeShape ;
    sh:targetClass jsonschema:DataSchema ;
    sh:closed false ;
    sh:order 1 ;
    sh:property [
        sh:path dcterms:title ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path dcterms:description ;
        sh:order 3 ;
    ] ;
    sh:property [
        sh:path jsonschema:const ;
        sh:maxCount 1 ;
        sh:order 6 ;
    ] ;
    sh:property [
        sh:path schema:unitCode ;
        sh:order 6 ;
    ] ;
    sh:property [
        sh:path jsonschema:oneOf ;
        sh:node :DataSchemaShape ;
        sh:order 8 ;
    ] ;
    sh:property [
        sh:path jsonschema:enum ;
        sh:order 9 ;
    ] ;
    sh:property [
        sh:path jsonschema:readOnly ;
        sh:datatype xsd:boolean ;
        sh:defaultValue false ;
        sh:maxCount 1 ;
        sh:order 10 ;
    ] ;
    sh:property [
        sh:path jsonschema:writeOnly ;
        sh:datatype xsd:boolean ;
        sh:defaultValue false ;
        sh:maxCount 1 ;
        sh:order 11 ;
    ] ;
    sh:property [
        sh:path jsonschema:format ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:order 12 ;
    ] .

:ArraySchemaShape a sh:NodeShape ;
    sh:targetClass jsonschema:ArraySchema ;
    sh:closed false ;
    sh:order 2 ;
    sh:property [
        sh:path jsonschema:items ;
        sh:node :DataSchemaShape ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path jsonschema:minItems ;
        sh:datatype xsd:unsignedInt ;
        sh:maxCount 1 ;
        sh:order 2 ;
    ] ;
    sh:property [
        sh:path jsonschema:maxItems ;
        sh:datatype xsd:unsignedInt ;
        sh:maxCount 1 ;
        sh:order 3 ;
    ] .
    
:BooleanSchemaShape a sh:NodeShape ;
    sh:targetClass jsonschema:BooleanSchema ;
    sh:closed false ;
    sh:order 3 .
    
:NumberSchemaShape a sh:NodeShape ;
    sh:targetClass jsonschema:NumberSchema ;
    sh:closed false ;
    sh:order 4 ;
    sh:property [
        sh:path jsonschema:minimum ;
        sh:or(
            [ sh:datatype xsd:double ]
            [ sh:datatype xsd:integer ] # due to JSON-LD type coercion
        ) ;
        sh:maxCount 1 ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path jsonschema:maximum ;
        sh:or(
            [ sh:datatype xsd:double ]
            [ sh:datatype xsd:integer ] # due to JSON-LD type coercion
        ) ;
        sh:maxCount 1 ;
        sh:order 2 ;
    ] .
    
:IntegerSchemaShape a sh:NodeShape ;
    sh:targetClass jsonschema:IntegerSchema ;
    sh:closed false ;
    sh:order 5 ;
    sh:property [
        sh:path jsonschema:minimum ;
        sh:datatype xsd:integer ;
        sh:maxCount 1 ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path jsonschema:maximum ;
        sh:datatype xsd:integer ;
        sh:maxCount 1 ;
        sh:order 2 ;
    ] .
    
:ObjectSchemaShape a sh:NodeShape ;
    sh:targetClass jsonschema:ObjectSchema ;
    sh:closed false ;
    sh:order 6 ;
    sh:property [
        sh:path jsonschema:properties ;
        sh:node :DataSchemaShape ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path jsonschema:required ;
        sh:datatype xsd:string ;
        sh:order 2 ;
    ] .

:StringSchemaShape a sh:NodeShape ;
    sh:targetClass jsonschema:StringSchema ;
    sh:closed false ;
    sh:order 7 .

:NullSchemaShape a sh:NodeShape ;
    sh:targetClass jsonschema:NullSchema ;
    sh:closed false ;
    sh:order 8 .
